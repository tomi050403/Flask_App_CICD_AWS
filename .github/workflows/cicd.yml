name: FLASK_APP_CICD_AWS_dev

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  AWS_REGION: ap-northeast-1
  TF_VERSION: 1.11.2
  TF_EXECUTE_PATH: 01_terraform/flask-app/environments/dev/

  TF_VAR_project: ${{ vars.PRJ_01_PROJECT }}
  TF_VAR_environment: ${{ vars.PRJ_02_ENVIRONMENT }}
  TF_VAR_region: ${{ vars.PRJ_03_REGION }}
  TF_VAR_backend_bucket: ${{ secrets.BED_01_BACKEND_BUCKET }}
  TF_VAR_backend_key: ${{ secrets.BED_02_BACKEND_KEY }}
  TF_VAR_ALB_from_IP: ${{ secrets.SEC_01_ALB_FROM_IP }}
  TF_VAR_rds_username: ${{ secrets.RDS_01_RDS_USERNAME }}

permissions:
  id-token: write
  contents: read

jobs:
  Terraform-Preview:
    name: "Terraform-Preview"
    runs-on: ubuntu-latest
    outputs:
      TF_PLAN_EXITCODE: ${{ steps.tf-plan.outputs.TF_PLAN_EXITCODE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}

      - name: terraform init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.BED_01_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.BED_02_BACKEND_KEY }}" \
            -backend-config="region="ap-northeast-1""
        working-directory: ${{ env.TF_EXECUTE_PATH }}

      - name: terraform validate
        run: |
          terraform validate
        working-directory: ${{ env.TF_EXECUTE_PATH }}

      - name: terraform plan
        id: tf-plan
        continue-on-error: true
        run: |
          set +e
          terraform plan \
            -input=false \
            -detailed-exitcode
          SET_EXIT_CODE=$?
          echo "TF_PLAN_EXITCODE=$SET_EXIT_CODE" >> $GITHUB_OUTPUT
        working-directory: ${{ env.TF_EXECUTE_PATH }}

  Terraform-Apply:
    name: "Terraform-Apply"
    needs: Terraform-Preview
    if: needs.Terraform-Preview.outputs.TF_PLAN_EXITCODE == '2'
    runs-on: ubuntu-latest
    steps:
      - name: wait for manual trigger
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "approve"

      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}

      - name: terraform init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.BED_01_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.BED_02_BACKEND_KEY }}" \
            -backend-config="region="ap-northeast-1""
        working-directory: ${{ env.TF_EXECUTE_PATH }}

      # - name: terraform apply
      #   run: |
      #     terraform apply -auto-approve
      #   working-directory: ${{ env.TF_EXECUTE_PATH }}
